---
apiVersion: v1
kind: Namespace
metadata:
  name: zorp-controller

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zorp-ingress-service-account
  namespace: zorp-controller

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zorp-ingress-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - services
  - namespaces
  - events
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "extensions"
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zorp-ingress-cluster-role-binding
  namespace: zorp-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zorp-ingress-cluster-role
subjects:
- kind: ServiceAccount
  name: zorp-ingress-service-account
  namespace: zorp-controller

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zorp-configmap
  namespace: default
data:

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: zorp-ingress
  name: zorp-ingress
  namespace: zorp-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      run: zorp-ingress
  template:
    metadata:
      labels:
        run: zorp-ingress
    spec:
      serviceAccountName: zorp-ingress-service-account
      containers:
        - name: zorp-ingress
          image: balasys/zorp-ingress
          imagePullPolicy: Always
          args:
            - --namespace=zorp-controller
            - --ingress.class=zorp
            - --behaviour=tosca
          resources:
            requests:
              cpu: "500m"
              memory: "50Mi"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 1042
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: stat
              containerPort: 1024
            - name: port5000
              containerPort: 5000
              hostPort: 5000
            - name: port4000
              containerPort: 4000
              hostPort: 4000
            - name: port3000
              containerPort: 3000
              hostPort: 3000
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      nodeSelector:
          kubernetes.io/hostname: kind-control-plane
